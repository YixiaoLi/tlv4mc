---------------------------------------------------------------------
                      『照会に対する回答』
---------------------------------------------------------------------

お忙しい中，丁寧な査読をしていただきありがとうございます．以下に，照会
およびコメントに対する回答をいたします．なお，査読者A,Bそれぞれの方の
照会項目に通し番号(A-1〜4, B-1〜11)を付加させていただきました．回答中
で照会項目を示す際には，この番号を用いることをご了承ください．

=====================================================================
査読者A
=====================================================================
=====================================================================
a. 小規模かつ明確な改訂要求（「採録のためのコメント」）
=====================================================================
---------------------------------------------------------------------
照会項目(A-1)
デバッガやプロファイラから独立した可視化ソフトウェアを用いることの課題
や制約、実装上の問題などを、（例えば段落1個を設けるなどして）網羅的に
まとめていただければと思います。8章に「計算の必要な表示項目」の制約が
あげられていますが、他にはありませんでしょうか。例えば、どの程度操作が
煩雑になる可能性があるか、処理時間の増加は見込まれるか、といった点があ
げられるかと思います。これらについて総括の上、論文に追記されることを期
待します。
---------------------------------------------------------------------
[回答]

7.4節を"TLVの制約と課題"として新たに追加して，デバッガソフトウェアや統
合開発環境に組み込まれた可視化ツールと比較した場合のTLVの制約や課題に
ついてまとめました．なお，8章で述べている「計算の必要な表示項目」に関
しては，既存のツールでも実現されていないため，7.4節には含めませんでし
た．

[変更箇所]

7. 評価　

7.4節の評価を行うことを追記

7.4 TLVの制約と課題　: 追加

=====================================================================
b. その他論文改善のための参考意見
=====================================================================
---------------------------------------------------------------------
照会項目(A-2)
1章（2ページ左コラム）にて、汎用性や拡張性の必要について述べられていま
すが、やや抽象的な議論に終始し、具体的に例えばどのような状況で汎用性や
拡張性の必要が生じたのか、実感がわきにくい気がしました。これらについて
記述を工夫されるとよろしいかと思います。
---------------------------------------------------------------------
[回答]

汎用性については，そもそも我々が開発を始めた動機は，可視化ツールが用意
されていなFMPカーネルのトレースログの可視化でしたので，具体例として，
可視化ツールが用意されていない環境の可視化をしたい場合と説明を追加しま
した．

拡張性について，具体例として，OS上で動作するアプリケーション固有の可視
化したい情報があることを追加しました．

[変更箇所]

1. はじめに　4段落目　: 元の３段落目の後半を分けて追記

---------------------------------------------------------------------
照会項目(A-3)
図14〜16の可視化表示結果を見比べると、図15だけが見かけが大きく異なって
おり、よくみるとタイトルバーに書かれたバージョン番号も図15だけが異なっ
ています。この差異には深い意味はあるのでしょうか？もし必然的な理由があ
るのでしたら、論文中に解説された方がよろしいかと思います。もし特に理由
がないのでしたら、図15も同じバージョンのTLVで作成し直した方がよろしい
かと思います。
---------------------------------------------------------------------
[回答]

ご指定の通り，図15は，図14/図16とは異なるバージョンのTLVを使用しており
ました．異なるバージョンを使用する必然性はないため，他と同じバージョン
(1.1)を用いて可視化したものを掲載しました．なお，見かけが大きく異なっ
ている理由は，図14/図16が，OSのリソース（タスク等）を可視化しているの
に対して，図15は，性質が異なるコンポーネントを可視化しているためです．
言い換えると，可視化ルールによって，可視化する対象に応じて見かけを変更
できることが，本ツールの特徴となります．

[変更箇所]

図15
・TLVのバージョンを1.1に変更．

----------------------------------------------------------------------
照会項目(A-4)
トレースログ可視化の先行技術に関する参考文献の大半が、商用（またはオー
プン）ソフトウェアのURLになっていますが、当該分野には学術論文も存在す
るのではないかと思います。ソフトウェアの構成や実行状況に関する可視化に
は、SoftVis（http://www.softvis.org/）という国際会議がありますので、も
しまだサーベイされたことがないようでしたら一度サーベイされることを勧め
ます。
----------------------------------------------------------------------
[回答]

[変更箇所]


=====================================================================
査読者B
=====================================================================
=====================================================================
照会事項：
=====================================================================
----------------------------------------------------------------------
照会項目(B-1)
トレースログファイル、変換ルールファイル、可視化ルールファイルについて
は、その必要性が事前に充分されてるのに対して、リソースヘッダファイル、
リソースファイルについては天下り的に登場していて、それぞれの必要性と使
われ方が読み取れません。特に、こういった内容のものが何かしら必要だとい
うことは想像できるのですが、二種類のファイルに分けてある（リソースヘッ
ダファイルとリソースファイル）のは何故でしょうか？
----------------------------------------------------------------------
[回答]

リソースヘッダファイルは，リソースタイプを定義しており，リソースファイ
ルは，リソースを定義します．リソースタイプとリソースの関係は，クラスと
インスタンスの関係と同様です．例えば，RTOSのタスクを例にすると，リソー
スタイプとしては，タスク名やタスクIDや初期状態といった属性を持つという
ことが定義されます（図9）．リソースとしては，実際にアプリーケーション
に存在するタスク毎に，タスクのリソースタイプで定義された属性にどような
値を持っているかが定義されます．（図10）．

リソースタイプは，可視化対象の環境（OSやコンポーネントシステム）毎に定
義する必要があります．一方，リソースは，システムを用いたアプリケーショ
ン(応用)毎に定義する必要があります．そのため，リソースタイプとリソース
は別のファイルとしています．

リソースタイプとリソースに関しては，4.1節で説明しておりましたが，ご指
摘の通り，リソースヘッダファイルとリソースファイルに関しては，5節で天
下り的に登場しており，必要性が分かりづらいですので，以下のように説明の
追記と説明の変更を行いました．

[変更箇所]

4.1 標準形式 3段落目 : 追加

リソースタイプは，可視化対象の環境（OSやシミュレータ）毎に定義され，リソ
ースはアプリケーション（応用）毎に，そのアプリケーションが動作する環境で
定義されたリソースタイプを型として定義される．

4.1.1 標準形式の例 1段落目 : 変更

図3のASPカーネルのトレースログを標準形式とした例を図5に示す．タスクの
リソースタイプの名前はTaskであり，タスクIDが1のタスクはTASK1という名前
のリソースとする．

5.3 リソースヘッダファイル 1段落目 : 変更

リソースヘッダファイルには，可視化対象の環境のリソースタイプの定義を記
述する．リソースタイプの定義には，リソースタイプの名前，表示名，属性，
振る舞いを記述する．

5.4 リソースファイル 1段落目 : 変更

リソースファイルには，アプリケーション（応用）毎に，主にトレースログに
登場するリソースの定義を記述する．

図 10 : タイトルの変更

ASPカーネル上で動作するアプリケーションのリソースファイルの一部

----------------------------------------------------------------------
照会項目(B-2)
比較対象が明確でないままに議論が進められているように思います。まず、以
下のような記述があります。

・２ページ２段落目：「トレースログの解析を支援する方法として，ツールに
  よるトレースログの可視化があり，これまでに幾つかのツールが開発されて
  いる．…」

・２ページ２．１節：「既存のトレースログ可視化表示ツールとしては，組込
  みシステム向けデバッガソフトウェアや統合開発環境の一部，Unix 系OS の
  可視化ツール，VCD 形式の可視化ツールなどがある．」

しかし、並列プログラムを対象とした、トレースログ可視化ツールがこれまで
に多く研究開発されてきています。中には、プログラムにトレースログを出力
するためのコードをプログラマが明示的に埋め込んで使うツールもあります。
例えば、以下のようなツールがあります。Visual Trace Explorer 
http://vite.gforge.inria.fr/overview.phpこのツールを使うには、Paje形式
のトレースログを出力するコードを可視化対象プログラムに埋め込みさえすれ
ばいいので、プログラムが動作する環境には非依存と言えます。恐らく、この
論文が指す「既存のツール」を明確にすると（恐らくもっと絞るのでしょう）、
この問題点が解消されるように思います。
----------------------------------------------------------------------
[回答]

[変更箇所]



----------------------------------------------------------------------
照会項目(B-3)
４ページ３段落目：「3 行目には，…，代わりに，タスクID が1 のタスクの
状態が実行状態(RUUNABLE) となったという情報が暗に含まれている．」とあ
りますが、TOPPERS/ASP カーネルでは、新しいタスクを生成したタスクは必ず
その新しいタスクの代わりに実行状態（RUNNABLE）になるのでしょうか？ 
TOPPERS/ASP カーネルの仕様に関する質問になってしまうのですが、マルチプ
ロセッサ環境下では、必ずしもそうでない場合があると思ったので、確認した
いと思います。
----------------------------------------------------------------------
[回答]

新しいタスクを生成（正確には起動）した場合，新しいタスクが実行状態（
RUNNING）となるかは，起動したタスクと起動された優先度との関係によりま
す．

起動された方のタスクの優先度の方が高い場合は，実行状態となり，ディスパ
ッチが発生して，図3の3行目のログが出力されます．

一方，起動された方のタスクの優先度の方が低いが等しい場合は，起動された
タスクにはディスパッチされないので，図3の3行目のログは出力されません．

どちらの場合も，起動されたタスクは一旦実行可能状態(READY)となり，図3の
2行目のログが出力されます．

ご指摘された図3の3行目は，起動された方のタスクの優先度の方が高くディス
パッチが発生した場合のみ出力されるますので，このログが出力された時点で，
起動したタスクの方は，実行状態となります．

[変更箇所]

なし．

----------------------------------------------------------------------
照会項目(B-4)
１０ページ図１２：

・図１２と図５は、変換元は同じ図３だと思いますが、異なっています。異な
  る変換結果を用いたのは何故でしょうか。

・TASK1という文字列を使うケースと、あるいはTASK(id==1)とするケースがあ
  るようですが、両ケースを使い分ける判断基準、および両ケースがどう使え
  るのか、ご説明ください。
----------------------------------------------------------------------
[回答]

まず，タスクのリソースタイプの名前を大文字の"TASK"となっている箇所があ
りますが，正しくは"Task"ですので，該当箇所を修正しました．

図5は，図3のログを元に人手により標準形式に変換したものであり，図12は，
図3のログを図11の変換ルールにより標準形式に変換したものです．どちらも
同じ意味のログとなっています．

両者が違う理由は，図5は，標準形式の説明のため簡単化として，タスク状態
(state)のみに属性の条件によるリソースの指定を行いました．

また，図11の変換ルールファイルは，図12を出力する生成ルールではありませ
んでしたので，修正しました．具体的には，修正前は，タスクのリソースの指
定の出力に$RES_NAMEの置換マクロを使用していますが，図12の標準形式のロ
グを出力した変換ルールでは，$RES_NAMEの置換マクロを使用していなかった
め修正しました．

なお，「TASK1」と「Task(id==1)」の使い分けに関連しますが，どちらのルー
ルも正しく，生成した標準形式のトレースログは表現は異なりますが，示して
いるリソースはどちらも等しいです．

リソースの指定に，「TASK1」とするか「Task(id==1)」とするかは，変換ルー
ルを記述するユーザーにゆだねられています．TASK1のタスクIDが1ならば，どち
ら方法で記述しても，同じリソース（TASK1）を示す事になります．

変換ルールを上記の図11の修正前にあるように，置換マクロ$RES_NAMEを使う
と，標準形式変換時にタスクIDが1のタスクの名前の文字列を取得して，標準
形式のトレースログにTASK1が出力されます．

一方，変換ルールを上記の図11の修正後のように置換マクロ$RES_NAMEを使わ
なければ，標準形式のトレースログには，Task(id==1)が出力されます．この
場合は，図形データ生成時にタスクIDが1のタスクの名前の文字列を取得して，
可視化表示が行われます．

$RES_NAMEを使った方が，標準形式のログにTASK1という文字列が表示されるた
め，人間は理解しやすいというメリットがあります．

図5と図12の違いについて説明を5.5節に追加しました．


[変更箇所]

図11 修正前

 1 "\[(?<t>\d+)\] dispatch to task (?<id>\d+)\.":[
 2   {
 3     "$EXIST{Task(state==RUNNING)}":[
 4       "[${t}]$RES_NAME{Task(state==RUNNING)}.state=READY",
 5     ]
 6   },
 7   "[${t}]$RES_NAME{Task(id==${id})}.state=RUNNING",
 8 ],
 9 "\[(?<time>\d+)\] enter to (?<name>(i\w+[_]\w+)) \
10                          ( (?<args>.+))?\.?" :[
11     "[${time}]$ATTR{CurrentContext.name}.enterSVC( \
12                                        ${name}, ${args})"
13 ],


図11 修正後

 1 "\[(?<t>\d+)\] dispatch to task (?<id>\d+)\.":[
 2   {
 3     "$EXIST{Task(state==RUNNING)}":[
 4       "[${t}]Task(state==RUNNING).state=READY",
 5     ]
 6   },
 7   "[${t}]Task(id==${id}).state=RUNNING",
 8 ],
 9 "\[(?<time>\d+)\] enter to (?<name>(i\w+[_]\w+)) \
10                          ( (?<args>.+))?\.?" :[
11     "[${time}]$ATTR{CurrentContext.name}.enterSVC( \
12                                        ${name}, ${args})"
13 ],


5.5節 変換ルールファイルと標準形式変換

なお，図5と異なり，タスクの指定を，``TASK1''という文字列使わず，リソー
スタイプTaskのid番号の属性の条件でTASK1を指定している(Task(id==1))．直
接文字列を生成したい場合は，変換ルールで$RES_NAMEの置換マクロを用いれ
ばよい．具体的には，図11の4行目や7行目をTask(id==${id})を$RES\_NAME\{}
で囲む．


リソースタイプの名前を大文字の"TASK"から小文字の"Task"へ修正．
 ・4.1 標準形式の例
 ・図3
 ・図12

----------------------------------------------------------------------
照会項目(B-5)
７．１節〜７．３節の評価に用いたファイルについて、リソースファイルの行
数が書いていないのですが、書かない理由をご説明ください。
----------------------------------------------------------------------
[回答]

照会項目(B-1)で説明した通り，リソースファイルは，アプリケーション（応
用）毎に用意します．リソースファイルの行数は，アプリケーションで用いて
いるリソースの数により変化します．例えば，ASPカーネル上で動作するアプ
リケーションの場合，そのアプリケーションで使用しているタスクやその他の
カーネルオブジェクトの数でリソースファイルの行数が変化します．今回の評
価では，可視化に用いたアプリケーションのリソース数は不要と考え，記載し
ませんでした．

[変更箇所]



=====================================================================
論文改善のための参考意見：
=====================================================================
----------------------------------------------------------------------
照会項目(B-6)
３ページ３．１節２段落目：「時系列に可視化表示する」の意味がなかなか分
かりませんでした。最初は「リアルタイムに可視化を行う」（つまり
real-time monitoringを行う）という意味だと思いました。
----------------------------------------------------------------------
[回答]

ご指摘の通り，「リアルタイムに可視化を行う」と解釈される可能性がありま
すので，時系列を外して，単に「可視化表示する」としました．

[変更箇所]

3.1節 2段落目

トレースログ可視化ツールを，時系列に記録されたプログラムの実行履歴をテ
キスト形式でファイル化したトレースログファイルを読み込み，その内容を
GUIを通じて可視化表示するツールとする．

----------------------------------------------------------------------
照会項目(B-7)
４ページ９行目：「実行状態(RUUNABLE)」とありますが、

・スペルミスに思われます。

・５ページ下から６行目からは「実行状態(RUNNING)」と実行状態の英語表記
  が変わっています。同じものを指すのであれば、英語表記を統一願います。
  異なるものを指すのであれば、誤解を生じないよう、異なる日本表記を与え
  て下さい。

・「(RUUNABLE)」の付け方が不統一なので統一願います。初回にのみつけるか、
  全部に付けるか、だと思います。
----------------------------------------------------------------------
[回答]
まず，４ページ９行目：「実行状態(RUUNABLE)」は，スペルミスかつ，正しく
は，「実行状態(RUNNING)」です．混乱を招き申し訳ございませんでした．

また，「(RUNNING)」・「(READY)」・「(DORMANT)」は，初回のみにつけるよ
うに統一しました．

[変更箇所]

3.2 汎用性の実現方針 3,4段落目
4.1.1 標準形式の例 2段落目
4.2 変換ルール 4段落目
5.5 変換ルールファイルと標準形式変換  2段落目
5.6 可視化ルールと図形データ作成 2段落目


----------------------------------------------------------------------
照会項目(B-8)
５ページ下から５行目：「2〜3 行目」は「2〜4 行目」でしょうか。
----------------------------------------------------------------------
[回答]

ご指摘の通り，「2〜4 行目」です．本文を修正しました．また，図5に行番号
が付加されていなかったため，付加しました．

[変更箇所]

4.1.1 標準形式の例
・「2〜3 行目」を「2〜4 行目」修正．

図5
・行番号を付加．

----------------------------------------------------------------------
照会項目(B-9)
８ページ５．１節３段落目：「標準形式変換は，…トレースログで指定された
リソースヘッダファイルと変換ルールファイルの定義に従い，…」とあります
が、５．４節冒頭には「リソースファイルには，…他にも，時間の単位や時間
の基数，適用する変換ルール，リソースヘッダ，可視化ルールを定義する．」
とあり、リソースヘッダの指定法の記述に矛盾があるように見えます。
----------------------------------------------------------------------
[回答]

5.1節3段落目が誤っており，5.4節が正しく，どのリソースヘッダファイルと
変換ルールファイルを用いるかは，リソースファイルに記述します．5.1節3段
落目を修正しました．

[変更箇所]
5.1構成 3段落目 : 修正

リソースファイルで指定されたリソースヘッダファイルと変換ルールファイル
の定義に従い，標準形式のトレースログを生成する．


----------------------------------------------------------------------
照会項目(B-10)
８ページ下から８行目：「グループ化可能か(CanGrouping)」がどういう意味
が想像できないので、ご説明ください。
----------------------------------------------------------------------
[回答]

「グループ化可能」としたリソースは，TLVのリソースウィンドウで，初期値
でグループ化されたツーリービューで表示することができます．例えばタスク
の初期優先度に「グループ化可能」とした場合は，リソースウィンドウで，優
先度毎のツーリービューで表示できます（図14の優先度別のタブを選択すると
表示されます）．

6.2.2節で説明していましたが，説明だけでは分かりにくいので，図15を追加
しました．また，5.3節に説明を追加しました．

[変更箇所]

5.3 リソースヘッダファイル

なお，属性のCanGroupingを``true''とすると，後述するTLVのリソースウィン
ドウにおいて，その属性の初期値でグループ化されたツーリービューで表示す
ることができる．

図15 : 追加

6.2.2 可視化表示項目の表示非表示切り替え

ASPカーネルの場合は，タスクの優先度がグループ化可能と指定されており，
図15に示すように，リソースウィンドウで，優先度でグループ化されたツリー
ビュー形式の表示が選択可能である．


----------------------------------------------------------------------
照会項目(B-11)
「●●ファイル」と記述されている箇所と「●●」のみ記述されている箇所が
混在していて、読むときに気になります。統一してください。例えば、１３ペ
ージの「…，変換ルールは15 行であり，可視化ルールは88 行であった．また，
リソースヘッダファイルは47 行であった．」です。
----------------------------------------------------------------------
[回答]

ご指摘の通り，表現方法が統一されておりませんでした．TLVの入力となるフ
ァイルに関しては，「●●ファイル」に統一しました．

[変更箇所]

5.1 構成 3段落目
5.4 リソースファイル 1段落目
7.2 ソフトウェアコンポーネント（TECS）の可視化 4段落目


以上．
