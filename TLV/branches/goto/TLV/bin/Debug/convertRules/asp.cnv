{
	"asp":
	{
		"\[(?<time>\d+)\] dispatch to task (?<id>\d+)\." : [
			{
				"EXIST{Task(state==RUNNING)}"	:[
					"[${time}]NAME{Task(state==RUNNING)}.preempt()",
					"[${time}]NAME{Task(state==RUNNING)}.state=RUNNABLE"
				]
			},
			"[${time}]NAME{Task(id==${id})}.dispatch()",
			"[${time}]NAME{Task(id==${id})}.state=RUNNING"
		],
		"\[(?<time>\d+)\] task (?<id>\d+) becomes (?<state>[^\.]+)\." : [
			{
				"Task(id==${id}).state==DORMANT && ${state}==RUNNABLE"				:"[${time}]NAME{Task(id==${id})}.activate()",
				"Task(id==${id}).state==RUNNING && ${state}==DORMANT"				:"[${time}]NAME{Task(id==${id})}.exit()",
				"Task(id==${id}).state==RUNNING && ${state}==WAITING"				:"[${time}]NAME{Task(id==${id})}.wait()",
				"Task(id==${id}).state==RUNNABLE && ${state}==SUSPENDED"			:"[${time}]NAME{Task(id==${id})}.suspend()",
				"Task(id==${id}).state==WAITING && ${state}==WAITING-SUSPENDED"		:"[${time}]NAME{Task(id==${id})}.suspend()",
				"Task(id==${id}).state==SUSPENDED && ${state}==RUNNABLE"			:"[${time}]NAME{Task(id==${id})}.resume()",
				"Task(id==${id}).state==WAITING-SUSPENDED && ${state}==WAITING"		:"[${time}]NAME{Task(id==${id})}.resume()",
				"Task(id==${id}).state==WAITING && ${state}==RUNNABLE"				:"[${time}]NAME{Task(id==${id})}.releaseFromWaiting()",
				"Task(id==${id}).state==WAITING-SUSPENDED && ${state}==SUSPENDED"	:"[${time}]NAME{Task(id==${id})}.releaseFromWaiting()",
				"Task(id==${id}).state==SUSPENDED && ${state}==DORMANT"				:"[${time}]NAME{Task(id==${id})}.terminate()",
				"Task(id==${id}).state==WAITING-SUSPENDED && ${state}==DORMANT"		:"[${time}]NAME{Task(id==${id})}.terminate()",
				"Task(id==${id}).state==WAITING && ${state}==DORMANT"				:"[${time}]NAME{Task(id==${id})}.terminate()",
				"Task(id==${id}).state==RUNNABLE && ${state}==DORMANT"				:"[${time}]NAME{Task(id==${id})}.terminate()"
			},
			"[${time}]NAME{Task(id==${id})}.state=${state}"
		],
		"\[(?<time>\d+)\] enter to (?<name>\w+) ?(?<args>.*)\."	:"[${time}]NAME{Task(state==RUNNING)}.enterSVC(${name}, ${args})",
		"\[(?<time>\d+)\] leave to (?<name>\w+) ?(?<args>.*)\."	:"[${time}]NAME{Task(state==RUNNING)}.leaveSVC(${name}, ${args})"
	}
}
